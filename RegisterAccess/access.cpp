#include "access.h"

#pragma section(".text$X", execute, read)

register_access_begin

#define DEFINE_READ_ACCESS(reg_name, ...) __declspec(allocate(".text$X")) \
unsigned char read_##reg_name##_value[] = { __VA_ARGS__ } ; \
auto read_##reg_name = reinterpret_cast<FnGetRegister>((void*)read_##reg_name##_value)

DEFINE_READ_ACCESS(rax, 0xC3);
DEFINE_READ_ACCESS(rcx, 0x48, 0x8B, 0xC1, 0xC3);
DEFINE_READ_ACCESS(rdx, 0x48, 0x8B, 0xC2, 0xC3);
DEFINE_READ_ACCESS(rbx, 0x48, 0x8B, 0xC3, 0xC3);
DEFINE_READ_ACCESS(rsp, 0x48, 0x8B, 0xC4, 0xC3);
DEFINE_READ_ACCESS(rbp, 0x48, 0x8B, 0xC5, 0xC3);
DEFINE_READ_ACCESS(rsi, 0x48, 0x8B, 0xC6, 0xC3);
DEFINE_READ_ACCESS(rdi, 0x48, 0x8B, 0xC7, 0xC3);

DEFINE_READ_ACCESS(r8,  0x49, 0x8B, 0xC0, 0xC3);
DEFINE_READ_ACCESS(r9,  0x49, 0x8B, 0xC1, 0xC3);
DEFINE_READ_ACCESS(r10, 0x49, 0x8B, 0xC2, 0xC3);
DEFINE_READ_ACCESS(r11, 0x49, 0x8B, 0xC3, 0xC3);
DEFINE_READ_ACCESS(r12, 0x49, 0x8B, 0xC4, 0xC3);
DEFINE_READ_ACCESS(r13, 0x49, 0x8B, 0xC5, 0xC3);
DEFINE_READ_ACCESS(r14, 0x49, 0x8B, 0xC6, 0xC3);
DEFINE_READ_ACCESS(r15, 0x49, 0x8B, 0xC7, 0xC3);

#define DEFINE_READ_ACCESS_XMM(reg_name, ...) __declspec(allocate(".text$X")) \
unsigned char read_##reg_name##_value[] = { __VA_ARGS__ } ; \
auto read_##reg_name = reinterpret_cast<FnGetXMMRegister>((void*)read_##reg_name##_value)

DEFINE_READ_ACCESS_XMM(xmm0, 0xC3 );
DEFINE_READ_ACCESS_XMM(xmm1, 0x0F, 0x28, 0xC1, 0xC3);
DEFINE_READ_ACCESS_XMM(xmm2, 0x0F, 0x28, 0xC2, 0xC3);
DEFINE_READ_ACCESS_XMM(xmm3, 0x0F, 0x28, 0xC3, 0xC3);
DEFINE_READ_ACCESS_XMM(xmm4, 0x0F, 0x28, 0xC4, 0xC3);
DEFINE_READ_ACCESS_XMM(xmm5, 0x0F, 0x28, 0xC5, 0xC3);
DEFINE_READ_ACCESS_XMM(xmm6, 0x0F, 0x28, 0xC6, 0xC3);
DEFINE_READ_ACCESS_XMM(xmm7, 0x0F, 0x28, 0xC7, 0xC3);

DEFINE_READ_ACCESS_XMM(xmm8,  0x41, 0x28, 0xC0, 0xC3);
DEFINE_READ_ACCESS_XMM(xmm9,  0x41, 0x28, 0xC1, 0xC3);
DEFINE_READ_ACCESS_XMM(xmm10, 0x41, 0x28, 0xC2, 0xC3);
DEFINE_READ_ACCESS_XMM(xmm11, 0x41, 0x28, 0xC3, 0xC3);
DEFINE_READ_ACCESS_XMM(xmm12, 0x41, 0x28, 0xC4, 0xC3);
DEFINE_READ_ACCESS_XMM(xmm13, 0x41, 0x28, 0xC5, 0xC3);
DEFINE_READ_ACCESS_XMM(xmm14, 0x41, 0x28, 0xC6, 0xC3);
DEFINE_READ_ACCESS_XMM(xmm15, 0x41, 0x28, 0xC7, 0xC3);

#define DEFINE_WRITE_ACCESS(reg_name, ...) __declspec(allocate(".text$X")) \
unsigned char write_##reg_name##_value[] = { __VA_ARGS__ } ; \
auto write_##reg_name = reinterpret_cast<FnPutRegister>((void*)write_##reg_name##_value)

DEFINE_WRITE_ACCESS(rax, 0x48, 0x8B, 0xC1, 0xC3);
DEFINE_WRITE_ACCESS(rcx, 0xC3);
DEFINE_WRITE_ACCESS(rdx, 0x48, 0x8B, 0xD1, 0xC3);
DEFINE_WRITE_ACCESS(rbx, 0x48, 0x8B, 0xD9, 0xC3);
DEFINE_WRITE_ACCESS(rsp, 0x48, 0x8B, 0xE1, 0xC3);
DEFINE_WRITE_ACCESS(rbp, 0x48, 0x8B, 0xE9, 0xC3);
DEFINE_WRITE_ACCESS(rsi, 0x48, 0x8B, 0xF1, 0xC3);
DEFINE_WRITE_ACCESS(rdi, 0x48, 0x8B, 0xF9, 0xC3);

DEFINE_WRITE_ACCESS(r8,  0x4C, 0x8B, 0xC1, 0xC3);
DEFINE_WRITE_ACCESS(r9,  0x4C, 0x8B, 0xC9, 0xC3);
DEFINE_WRITE_ACCESS(r10, 0x4C, 0x8B, 0xD1, 0xC3);
DEFINE_WRITE_ACCESS(r11, 0x4C, 0x8B, 0xD9, 0xC3);
DEFINE_WRITE_ACCESS(r12, 0x4C, 0x8B, 0xE1, 0xC3);
DEFINE_WRITE_ACCESS(r13, 0x4C, 0x8B, 0xE9, 0xC3);
DEFINE_WRITE_ACCESS(r14, 0x4C, 0x8B, 0xF1, 0xC3);
DEFINE_WRITE_ACCESS(r15, 0x4C, 0x8B, 0xF9, 0xC3);

#define DEFINE_WRITE_ACCESS_XMM(reg_name, ...) __declspec(allocate(".text$X")) \
unsigned char write_##reg_name##_value[] = { __VA_ARGS__ } ; \
auto write_##reg_name = reinterpret_cast<FnPutXMMRegister>((void*)write_##reg_name##_value)

DEFINE_WRITE_ACCESS_XMM(xmm0, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm1, 0x0F, 0x28, 0xC8, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm2, 0x0F, 0x28, 0xD0, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm3, 0x0F, 0x28, 0xD8, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm4, 0x0F, 0x28, 0xE0, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm5, 0x0F, 0x28, 0xE8, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm6, 0x0F, 0x28, 0xF0, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm7, 0x0F, 0x28, 0xF8, 0xC3);

DEFINE_WRITE_ACCESS_XMM(xmm8,  0x44, 0x0F, 0x28, 0xC0, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm9,  0x44, 0x0F, 0x28, 0xC8, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm10, 0x44, 0x0F, 0x28, 0xD0, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm11, 0x44, 0x0F, 0x28, 0xD8, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm12, 0x44, 0x0F, 0x28, 0xE0, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm13, 0x44, 0x0F, 0x28, 0xE8, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm14, 0x44, 0x0F, 0x28, 0xF0, 0xC3);
DEFINE_WRITE_ACCESS_XMM(xmm15, 0x44, 0x0F, 0x28, 0xF8, 0xC3);

register_access_end